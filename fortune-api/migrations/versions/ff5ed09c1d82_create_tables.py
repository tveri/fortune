"""create tables

Revision ID: ff5ed09c1d82
Revises: 
Create Date: 2023-09-20 17:02:09.446528

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ff5ed09c1d82'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educational_platforms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('short_name_ru', sa.String(), nullable=True),
    sa.Column('adress', sa.String(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lng', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specializations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('short_name_ru', sa.String(), nullable=True),
    sa.Column('time_to_study', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('short_name_ru', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('second_name', sa.String(), nullable=False),
    sa.Column('mail', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail')
    )
    op.create_table('curators',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('educational_platform_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['educational_platform_id'], ['educational_platforms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('short_name_ru', sa.String(), nullable=True),
    sa.Column('curator_id', sa.UUID(), nullable=True),
    sa.Column('specialization_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['curator_id'], ['curators.user_id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['specializations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('groups')
    op.drop_table('curators')
    op.drop_table('users')
    op.drop_table('subjects')
    op.drop_table('specializations')
    op.drop_table('educational_platforms')
    # ### end Alembic commands ###
